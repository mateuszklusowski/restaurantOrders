version: "3.8"

services:
  app:
    container_name: restaurant_app
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python3 manage.py wait_for_db --settings=app.settings.test&&
             python3 manage.py makemigrations --settings=app.settings.test &&
             python3 manage.py migrate --settings=app.settings.test &&
             python manage.py runserver --settings=app.settings.test 0.0.0.0:8000"
    # env_file:
    #   - app/.env
    environment:
      - DB_HOST=db
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postpsw
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - db

  celery:
    restart: always
    build:
      context: .
      args:
        - DEV=true
    command: celery -A app worker --loglevel=INFO
    # env_file:
    #   - app/.env
    environment:
      - DB_HOST=db
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postpsw
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    volumes:
      - ./app:/app
    depends_on:
      - app
      - redis
      - db

  db:
    image: postgres:14-alpine
    container_name: pgdb-restaurant
    # ports:
    #   - "8001:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postpsw
      
  redis:
    image: redis:alpine
    ports:
    - "6379:6379"
